{"ast":null,"code":"var _jsxFileName = \"C:\\\\grapplerV2Workflow-aditya-frontend\\\\src\\\\components\\\\Rule\\\\AddRule.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport Modal from \"react-bootstrap/Modal\";\nimport Button from \"react-bootstrap/Button\";\nimport axios from \"axios\";\nimport { useSelector } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AddRule = ({\n  show,\n  handleClose\n}) => {\n  _s();\n  // const { projectById } = useSelector((state) => state.Project);\n  // const { status } = projectById;\n  // const { stageList } = projectById;\n\n  const [formData, setFormData] = useState({\n    triggerType: \"Status_Change\",\n    previousTrigger: \"\",\n    currentTrigger: \"\",\n    actionType: \"\",\n    action: \"\"\n  });\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData(prevData => ({\n      ...prevData,\n      [name]: value\n    }));\n  };\n  const handleCreateRule = () => {\n    // API call to create rule with formData\n    if (formData.triggerType === \"Due_Date_Approcharging\") {\n      formData.triggerType = \"Date_Seduled\";\n      formData.previousTrigger = \"before\";\n    }\n    if (formData.triggerType === \"Task_OverDue\") {\n      formData.triggerType = \"Date_Seduled\";\n      formData.previousTrigger = \"after\";\n    }\n    if (formData.actionType === \"Change_Stage\") {\n      const selectedStage = stageList.find(stage => stage.stageName === formData.action);\n      const stageId = selectedStage === null || selectedStage === void 0 ? void 0 : selectedStage.stageId;\n      formData.action = stageId;\n    }\n    axios.post(`http://localhost:8080/projects/${projectById.projectId}/rules`, formData).then(response => {\n      console.log(\"API call successful:\", response.data.data);\n    }).catch(error => {\n      console.error(\"Error updating data: \", error);\n    });\n    setFormData({\n      triggerType: \"Status_Change\",\n      previousTrigger: \"\",\n      currentTrigger: \"\",\n      actionType: \"\",\n      action: \"\"\n    });\n    handleClose();\n  };\n  const renderTriggerOptions = () => {\n    if (formData.triggerType === \"Status_Change\") {\n      var _status, _status2;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Previous Status\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            className: \"form-control\",\n            name: \"previousTrigger\",\n            value: formData.previousTrigger,\n            onChange: handleInputChange,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"option\",\n              children: \"Any\"\n            }, \"option\", false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 29\n            }, this), (_status = status) === null || _status === void 0 ? void 0 : _status.map(status => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: status,\n              children: status\n            }, status, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 33\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Next Status\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            className: \"form-control\",\n            name: \"currentTrigger\",\n            value: formData.currentTrigger,\n            onChange: handleInputChange,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"option\",\n              children: \"Any\"\n            }, \"option\", false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 29\n            }, this), (_status2 = status) === null || _status2 === void 0 ? void 0 : _status2.map(status => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: status,\n              children: status\n            }, status, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 33\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this);\n    } else if (formData.triggerType === \"Stage_Change\") {\n      var _stageList, _stageList2;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Previous Stage\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            className: \"form-control\",\n            name: \"previousTrigger\",\n            value: formData.previousTrigger,\n            onChange: handleInputChange,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"Any\",\n              children: \"Any\"\n            }, \"Any\", false, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 29\n            }, this), (_stageList = stageList) === null || _stageList === void 0 ? void 0 : _stageList.map(stage => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: stage.stageName,\n              children: stage.stageName\n            }, stage.stageId, false, {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 33\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Current Stage\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            className: \"form-control\",\n            name: \"action\",\n            value: formData.action,\n            onChange: handleInputChange,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"Any\",\n              children: \"Any\"\n            }, \"Any\", false, {\n              fileName: _jsxFileName,\n              lineNumber: 142,\n              columnNumber: 29\n            }, this), (_stageList2 = stageList) === null || _stageList2 === void 0 ? void 0 : _stageList2.map(stage => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: stage.stageName,\n              children: stage.stageName\n            }, stage.stageId, false, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 33\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 17\n      }, this);\n    } else if (formData.triggerType === \"Due_Date_Approcharging\") {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Day before\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            className: \"form-control\",\n            name: \"currentTrigger\",\n            value: formData.currentTrigger,\n            onChange: handleInputChange,\n            min: \"1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 17\n      }, this);\n    } else if (formData.triggerType === \"Task_OverDue\") {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Day After\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            className: \"form-control\",\n            name: \"currentTrigger\",\n            value: formData.currentTrigger,\n            onChange: handleInputChange,\n            min: \"1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 17\n      }, this);\n    }\n    return null; // Return null if no matching trigger type\n  };\n\n  const renderActionOptions = () => {\n    if (formData.actionType === \"Change_Status\") {\n      var _status3;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Next Status\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            className: \"form-control\",\n            name: \"action\",\n            value: formData.action,\n            onChange: handleInputChange,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"option\",\n              children: \"Any\"\n            }, \"option\", false, {\n              fileName: _jsxFileName,\n              lineNumber: 206,\n              columnNumber: 29\n            }, this), (_status3 = status) === null || _status3 === void 0 ? void 0 : _status3.map(status => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: status,\n              children: status\n            }, status, false, {\n              fileName: _jsxFileName,\n              lineNumber: 210,\n              columnNumber: 33\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 17\n      }, this);\n    } else if (formData.actionType === \"Change_Stage\") {\n      var _stageList3;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Next Stage\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 224,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            className: \"form-control\",\n            name: \"action\",\n            value: formData.action,\n            onChange: handleInputChange,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"Any\",\n              children: \"Any\"\n            }, \"Any\", false, {\n              fileName: _jsxFileName,\n              lineNumber: 231,\n              columnNumber: 29\n            }, this), (_stageList3 = stageList) === null || _stageList3 === void 0 ? void 0 : _stageList3.map(stage => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: stage.stageName,\n              children: stage.stageName\n            }, stage.stageId, false, {\n              fileName: _jsxFileName,\n              lineNumber: 235,\n              columnNumber: 33\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 225,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 17\n      }, this);\n    }\n    return null; // Return null if no matching trigger type\n  };\n\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    show: show,\n    onHide: handleClose,\n    children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n      closeButton: true,\n      children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n        children: \"Rules\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-6\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Trigger Type\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 259,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              className: \"form-control\",\n              name: \"triggerType\",\n              value: formData.triggerType,\n              onChange: handleInputChange,\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"Status_Change\",\n                children: \"Status Change\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 266,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"Stage_Change\",\n                children: \"Stage Change\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 267,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"Due_Date_Approcharging\",\n                children: \"Due_Date_Approcharging\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 268,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"Task_OverDue\",\n                children: \"Task_OverDue\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 269,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 260,\n              columnNumber: 29\n            }, this), renderTriggerOptions()]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 258,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-6\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Action Type\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 276,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              className: \"form-control\",\n              name: \"actionType\",\n              value: formData.actionType,\n              onChange: handleInputChange,\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"Change_Status\",\n                children: \"Status Change\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 283,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"Change_Stage\",\n                children: \"Stage Change\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 284,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 277,\n              columnNumber: 29\n            }, this), renderActionOptions()]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 275,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 274,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        variant: \"secondary\",\n        onClick: handleClose,\n        children: \"Close\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 292,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"primary\",\n        onClick: handleCreateRule,\n        children: \"Create\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 295,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 291,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 251,\n    columnNumber: 9\n  }, this);\n};\n_s(AddRule, \"30yhiJiE31t+4OrO60/23jrGJ5Y=\");\n_c = AddRule;\nexport default AddRule;\nvar _c;\n$RefreshReg$(_c, \"AddRule\");","map":{"version":3,"names":["React","useState","Modal","Button","axios","useSelector","jsxDEV","_jsxDEV","AddRule","show","handleClose","_s","formData","setFormData","triggerType","previousTrigger","currentTrigger","actionType","action","handleInputChange","e","name","value","target","prevData","handleCreateRule","selectedStage","stageList","find","stage","stageName","stageId","post","projectById","projectId","then","response","console","log","data","catch","error","renderTriggerOptions","_status","_status2","children","className","fileName","_jsxFileName","lineNumber","columnNumber","onChange","status","map","_stageList","_stageList2","type","min","renderActionOptions","_status3","_stageList3","onHide","Header","closeButton","Title","Body","Footer","variant","onClick","_c","$RefreshReg$"],"sources":["C:/grapplerV2Workflow-aditya-frontend/src/components/Rule/AddRule.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport axios from \"axios\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst AddRule = ({ show, handleClose }) => {\r\n\r\n    // const { projectById } = useSelector((state) => state.Project);\r\n    // const { status } = projectById;\r\n    // const { stageList } = projectById;\r\n\r\n    const [formData, setFormData] = useState({\r\n        triggerType: \"Status_Change\",\r\n        previousTrigger: \"\",\r\n        currentTrigger: \"\",\r\n        actionType: \"\",\r\n        action: \"\",\r\n    });\r\n\r\n    const handleInputChange = (e) => {\r\n        const { name, value } = e.target;\r\n        setFormData((prevData) => ({\r\n            ...prevData,\r\n            [name]: value,\r\n        }));\r\n    };\r\n    const handleCreateRule = () => {\r\n        // API call to create rule with formData\r\n        if (formData.triggerType === \"Due_Date_Approcharging\") {\r\n            formData.triggerType = \"Date_Seduled\";\r\n            formData.previousTrigger = \"before\";\r\n        }\r\n        if (formData.triggerType === \"Task_OverDue\") {\r\n            formData.triggerType = \"Date_Seduled\";\r\n            formData.previousTrigger = \"after\";\r\n        }\r\n        if(formData.actionType === \"Change_Stage\"){\r\n            const selectedStage = stageList.find(\r\n                (stage) => stage.stageName === formData.action\r\n              );\r\n            const stageId = selectedStage?.stageId;\r\n            formData.action=stageId;\r\n        }\r\n        \r\n        axios\r\n        .post(\r\n          `http://localhost:8080/projects/${projectById.projectId}/rules`,\r\n          formData\r\n        )\r\n        .then((response) => {\r\n          console.log(\"API call successful:\", response.data.data);\r\n        })\r\n        .catch((error) => {\r\n          console.error(\"Error updating data: \", error);\r\n        });\r\n        setFormData({\r\n            triggerType: \"Status_Change\",\r\n            previousTrigger: \"\",\r\n            currentTrigger: \"\",\r\n            actionType: \"\",\r\n            action: \"\",\r\n        });\r\n        handleClose();\r\n    };\r\n\r\n    const renderTriggerOptions = () => {\r\n        if (formData.triggerType === \"Status_Change\") {\r\n            return (\r\n                <div>\r\n                    {/* Status Change specific options */}\r\n                    <div className=\"form-group\">\r\n                        <label>Previous Status</label>\r\n                        <select\r\n                            className=\"form-control\"\r\n                            name=\"previousTrigger\"\r\n                            value={formData.previousTrigger}\r\n                            onChange={handleInputChange}\r\n                        >\r\n                            <option key=\"option\" value=\"option\">\r\n                                Any\r\n                            </option>\r\n                            {status?.map((status) => (\r\n                                <option key={status} value={status}>\r\n                                    {status}\r\n                                </option>\r\n                            ))}\r\n\r\n                        </select>\r\n                        <label>Next Status</label>\r\n                        <select\r\n                            className=\"form-control\"\r\n                            name=\"currentTrigger\"\r\n                            value={formData.currentTrigger}\r\n                            onChange={handleInputChange}\r\n                        >\r\n                            <option key=\"option\" value=\"option\">\r\n                                Any\r\n                            </option>\r\n                            {status?.map((status) => (\r\n                                <option key={status} value={status}>\r\n                                    {status}\r\n                                </option>\r\n                            ))}\r\n\r\n                        </select>\r\n                    </div>\r\n                    {/* ... add more fields */}\r\n                </div>\r\n            );\r\n        } else if (formData.triggerType === \"Stage_Change\") {\r\n            return (\r\n                <div>\r\n                    {/* Stage Change specific options */}\r\n                    <div className=\"form-group\">\r\n                        <label>Previous Stage</label>\r\n                        <select\r\n                            className=\"form-control\"\r\n                            name=\"previousTrigger\"\r\n                            value={formData.previousTrigger}\r\n                            onChange={handleInputChange}\r\n                        >\r\n                            <option key=\"Any\" value=\"Any\">\r\n                                Any\r\n                            </option>\r\n                            {stageList?.map((stage) => (\r\n                                <option key={stage.stageId} value={stage.stageName}>\r\n                                    {stage.stageName}\r\n                                </option>\r\n                            ))}\r\n                        </select>\r\n\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label>Current Stage</label>\r\n                        <select\r\n                            className=\"form-control\"\r\n                            name=\"action\"\r\n                            value={formData.action}\r\n                            onChange={handleInputChange}\r\n                        >\r\n                            <option key=\"Any\" value=\"Any\">\r\n                                Any\r\n                            </option>\r\n                            {stageList?.map((stage) => (\r\n                                <option key={stage.stageId} value={stage.stageName}>\r\n                                    {stage.stageName}\r\n                                </option>\r\n                            ))}\r\n                        </select>\r\n                    </div>\r\n                    {/* ... add more fields */}\r\n                </div>\r\n            );\r\n        } else if (formData.triggerType === \"Due_Date_Approcharging\") {\r\n            return (\r\n                <div>\r\n                    {/* Due Date Change specific options */}\r\n                    <div className=\"form-group\">\r\n                        <label>Day before</label>\r\n                        <input\r\n                            type=\"number\"\r\n                            className=\"form-control\"\r\n                            name=\"currentTrigger\"\r\n                            value={formData.currentTrigger}\r\n                            onChange={handleInputChange}\r\n                            min=\"1\"\r\n                        />\r\n                    </div>\r\n                    {/* ... add more fields */}\r\n                </div>\r\n            );\r\n        } else if (formData.triggerType === \"Task_OverDue\") {\r\n            return (\r\n                <div>\r\n                    <div className=\"form-group\">\r\n                        <label>Day After</label>\r\n                        <input\r\n                            type=\"number\"\r\n                            className=\"form-control\"\r\n                            name=\"currentTrigger\"\r\n                            value={formData.currentTrigger}\r\n                            onChange={handleInputChange}\r\n                            min=\"1\"\r\n                        />\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n        return null; // Return null if no matching trigger type\r\n    };\r\n\r\n    const renderActionOptions = () => {\r\n        if (formData.actionType === \"Change_Status\") {\r\n            return (\r\n                <div>\r\n                    {/* Status Change specific options */}\r\n                    <div className=\"form-group\">\r\n                        <label>Next Status</label>\r\n                        <select\r\n                            className=\"form-control\"\r\n                            name=\"action\"\r\n                            value={formData.action}\r\n                            onChange={handleInputChange}\r\n                        >\r\n                            <option key=\"option\" value=\"option\">\r\n                                Any\r\n                            </option>\r\n                            {status?.map((status) => (\r\n                                <option key={status} value={status}>\r\n                                    {status}\r\n                                </option>\r\n                            ))}\r\n\r\n                        </select>\r\n                    </div>\r\n                </div>\r\n            );\r\n        } else if (formData.actionType === \"Change_Stage\") {\r\n            return (\r\n                <div>\r\n                    {/* Stage Change specific options */}\r\n                    <div className=\"form-group\">\r\n                        <label>Next Stage</label>\r\n                        <select\r\n                            className=\"form-control\"\r\n                            name=\"action\"\r\n                            value={formData.action}\r\n                            onChange={handleInputChange}\r\n                        >\r\n                            <option key=\"Any\" value=\"Any\">\r\n                                Any\r\n                            </option>\r\n                            {stageList?.map((stage) => (\r\n                                <option key={stage.stageId} value={stage.stageName}>\r\n                                    {stage.stageName}\r\n                                </option>\r\n                            ))}\r\n                        </select>\r\n                    </div>\r\n                    {/* ... add more fields */}\r\n                </div>\r\n            );\r\n        }\r\n        return null; // Return null if no matching trigger type\r\n    };\r\n\r\n\r\n\r\n    return (\r\n        <Modal show={show} onHide={handleClose}>\r\n            <Modal.Header closeButton>\r\n                <Modal.Title>Rules</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-6\">\r\n                        <div className=\"form-group\">\r\n                            <label>Trigger Type</label>\r\n                            <select\r\n                                className=\"form-control\"\r\n                                name=\"triggerType\"\r\n                                value={formData.triggerType}\r\n                                onChange={handleInputChange}\r\n                            >\r\n                                <option value=\"Status_Change\">Status Change</option>\r\n                                <option value=\"Stage_Change\">Stage Change</option>\r\n                                <option value=\"Due_Date_Approcharging\">Due_Date_Approcharging</option>\r\n                                <option value=\"Task_OverDue\">Task_OverDue</option>\r\n                            </select>\r\n                            {renderTriggerOptions()}\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-md-6\">\r\n                        <div className=\"form-group\">\r\n                            <label>Action Type</label>\r\n                            <select\r\n                                className=\"form-control\"\r\n                                name=\"actionType\"\r\n                                value={formData.actionType}\r\n                                onChange={handleInputChange}\r\n                            >\r\n                                <option value=\"Change_Status\">Status Change</option>\r\n                                <option value=\"Change_Stage\">Stage Change</option>\r\n                            </select>\r\n                            {renderActionOptions()}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n                <Button variant=\"secondary\" onClick={handleClose}>\r\n                    Close\r\n                </Button>\r\n                <Button variant=\"primary\" onClick={handleCreateRule}>\r\n                    Create\r\n                </Button>\r\n            </Modal.Footer>\r\n        </Modal>\r\n    );\r\n};\r\n\r\nexport default AddRule;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,uBAAuB;AACzC,OAAOC,MAAM,MAAM,wBAAwB;AAC3C,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,QAAQ,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1C,MAAMC,OAAO,GAAGA,CAAC;EAAEC,IAAI;EAAEC;AAAY,CAAC,KAAK;EAAAC,EAAA;EAEvC;EACA;EACA;;EAEA,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGZ,QAAQ,CAAC;IACrCa,WAAW,EAAE,eAAe;IAC5BC,eAAe,EAAE,EAAE;IACnBC,cAAc,EAAE,EAAE;IAClBC,UAAU,EAAE,EAAE;IACdC,MAAM,EAAE;EACZ,CAAC,CAAC;EAEF,MAAMC,iBAAiB,GAAIC,CAAC,IAAK;IAC7B,MAAM;MAAEC,IAAI;MAAEC;IAAM,CAAC,GAAGF,CAAC,CAACG,MAAM;IAChCV,WAAW,CAAEW,QAAQ,KAAM;MACvB,GAAGA,QAAQ;MACX,CAACH,IAAI,GAAGC;IACZ,CAAC,CAAC,CAAC;EACP,CAAC;EACD,MAAMG,gBAAgB,GAAGA,CAAA,KAAM;IAC3B;IACA,IAAIb,QAAQ,CAACE,WAAW,KAAK,wBAAwB,EAAE;MACnDF,QAAQ,CAACE,WAAW,GAAG,cAAc;MACrCF,QAAQ,CAACG,eAAe,GAAG,QAAQ;IACvC;IACA,IAAIH,QAAQ,CAACE,WAAW,KAAK,cAAc,EAAE;MACzCF,QAAQ,CAACE,WAAW,GAAG,cAAc;MACrCF,QAAQ,CAACG,eAAe,GAAG,OAAO;IACtC;IACA,IAAGH,QAAQ,CAACK,UAAU,KAAK,cAAc,EAAC;MACtC,MAAMS,aAAa,GAAGC,SAAS,CAACC,IAAI,CAC/BC,KAAK,IAAKA,KAAK,CAACC,SAAS,KAAKlB,QAAQ,CAACM,MAC1C,CAAC;MACH,MAAMa,OAAO,GAAGL,aAAa,aAAbA,aAAa,uBAAbA,aAAa,CAAEK,OAAO;MACtCnB,QAAQ,CAACM,MAAM,GAACa,OAAO;IAC3B;IAEA3B,KAAK,CACJ4B,IAAI,CACF,kCAAiCC,WAAW,CAACC,SAAU,QAAO,EAC/DtB,QACF,CAAC,CACAuB,IAAI,CAAEC,QAAQ,IAAK;MAClBC,OAAO,CAACC,GAAG,CAAC,sBAAsB,EAAEF,QAAQ,CAACG,IAAI,CAACA,IAAI,CAAC;IACzD,CAAC,CAAC,CACDC,KAAK,CAAEC,KAAK,IAAK;MAChBJ,OAAO,CAACI,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;IAC/C,CAAC,CAAC;IACF5B,WAAW,CAAC;MACRC,WAAW,EAAE,eAAe;MAC5BC,eAAe,EAAE,EAAE;MACnBC,cAAc,EAAE,EAAE;MAClBC,UAAU,EAAE,EAAE;MACdC,MAAM,EAAE;IACZ,CAAC,CAAC;IACFR,WAAW,CAAC,CAAC;EACjB,CAAC;EAED,MAAMgC,oBAAoB,GAAGA,CAAA,KAAM;IAC/B,IAAI9B,QAAQ,CAACE,WAAW,KAAK,eAAe,EAAE;MAAA,IAAA6B,OAAA,EAAAC,QAAA;MAC1C,oBACIrC,OAAA;QAAAsC,QAAA,eAEItC,OAAA;UAAKuC,SAAS,EAAC,YAAY;UAAAD,QAAA,gBACvBtC,OAAA;YAAAsC,QAAA,EAAO;UAAe;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eAC9B3C,OAAA;YACIuC,SAAS,EAAC,cAAc;YACxBzB,IAAI,EAAC,iBAAiB;YACtBC,KAAK,EAAEV,QAAQ,CAACG,eAAgB;YAChCoC,QAAQ,EAAEhC,iBAAkB;YAAA0B,QAAA,gBAE5BtC,OAAA;cAAqBe,KAAK,EAAC,QAAQ;cAAAuB,QAAA,EAAC;YAEpC,GAFY,QAAQ;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAEZ,CAAC,GAAAP,OAAA,GACRS,MAAM,cAAAT,OAAA,uBAANA,OAAA,CAAQU,GAAG,CAAED,MAAM,iBAChB7C,OAAA;cAAqBe,KAAK,EAAE8B,MAAO;cAAAP,QAAA,EAC9BO;YAAM,GADEA,MAAM;cAAAL,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAEX,CACX,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAEE,CAAC,eACT3C,OAAA;YAAAsC,QAAA,EAAO;UAAW;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eAC1B3C,OAAA;YACIuC,SAAS,EAAC,cAAc;YACxBzB,IAAI,EAAC,gBAAgB;YACrBC,KAAK,EAAEV,QAAQ,CAACI,cAAe;YAC/BmC,QAAQ,EAAEhC,iBAAkB;YAAA0B,QAAA,gBAE5BtC,OAAA;cAAqBe,KAAK,EAAC,QAAQ;cAAAuB,QAAA,EAAC;YAEpC,GAFY,QAAQ;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAEZ,CAAC,GAAAN,QAAA,GACRQ,MAAM,cAAAR,QAAA,uBAANA,QAAA,CAAQS,GAAG,CAAED,MAAM,iBAChB7C,OAAA;cAAqBe,KAAK,EAAE8B,MAAO;cAAAP,QAAA,EAC9BO;YAAM,GADEA,MAAM;cAAAL,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAEX,CACX,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAEE,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACR;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEL,CAAC;IAEd,CAAC,MAAM,IAAItC,QAAQ,CAACE,WAAW,KAAK,cAAc,EAAE;MAAA,IAAAwC,UAAA,EAAAC,WAAA;MAChD,oBACIhD,OAAA;QAAAsC,QAAA,gBAEItC,OAAA;UAAKuC,SAAS,EAAC,YAAY;UAAAD,QAAA,gBACvBtC,OAAA;YAAAsC,QAAA,EAAO;UAAc;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eAC7B3C,OAAA;YACIuC,SAAS,EAAC,cAAc;YACxBzB,IAAI,EAAC,iBAAiB;YACtBC,KAAK,EAAEV,QAAQ,CAACG,eAAgB;YAChCoC,QAAQ,EAAEhC,iBAAkB;YAAA0B,QAAA,gBAE5BtC,OAAA;cAAkBe,KAAK,EAAC,KAAK;cAAAuB,QAAA,EAAC;YAE9B,GAFY,KAAK;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAET,CAAC,GAAAI,UAAA,GACR3B,SAAS,cAAA2B,UAAA,uBAATA,UAAA,CAAWD,GAAG,CAAExB,KAAK,iBAClBtB,OAAA;cAA4Be,KAAK,EAAEO,KAAK,CAACC,SAAU;cAAAe,QAAA,EAC9ChB,KAAK,CAACC;YAAS,GADPD,KAAK,CAACE,OAAO;cAAAgB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAElB,CACX,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACE,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAER,CAAC,eACN3C,OAAA;UAAKuC,SAAS,EAAC,YAAY;UAAAD,QAAA,gBACvBtC,OAAA;YAAAsC,QAAA,EAAO;UAAa;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eAC5B3C,OAAA;YACIuC,SAAS,EAAC,cAAc;YACxBzB,IAAI,EAAC,QAAQ;YACbC,KAAK,EAAEV,QAAQ,CAACM,MAAO;YACvBiC,QAAQ,EAAEhC,iBAAkB;YAAA0B,QAAA,gBAE5BtC,OAAA;cAAkBe,KAAK,EAAC,KAAK;cAAAuB,QAAA,EAAC;YAE9B,GAFY,KAAK;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAET,CAAC,GAAAK,WAAA,GACR5B,SAAS,cAAA4B,WAAA,uBAATA,WAAA,CAAWF,GAAG,CAAExB,KAAK,iBAClBtB,OAAA;cAA4Be,KAAK,EAAEO,KAAK,CAACC,SAAU;cAAAe,QAAA,EAC9ChB,KAAK,CAACC;YAAS,GADPD,KAAK,CAACE,OAAO;cAAAgB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAElB,CACX,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACE,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACR,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEL,CAAC;IAEd,CAAC,MAAM,IAAItC,QAAQ,CAACE,WAAW,KAAK,wBAAwB,EAAE;MAC1D,oBACIP,OAAA;QAAAsC,QAAA,eAEItC,OAAA;UAAKuC,SAAS,EAAC,YAAY;UAAAD,QAAA,gBACvBtC,OAAA;YAAAsC,QAAA,EAAO;UAAU;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eACzB3C,OAAA;YACIiD,IAAI,EAAC,QAAQ;YACbV,SAAS,EAAC,cAAc;YACxBzB,IAAI,EAAC,gBAAgB;YACrBC,KAAK,EAAEV,QAAQ,CAACI,cAAe;YAC/BmC,QAAQ,EAAEhC,iBAAkB;YAC5BsC,GAAG,EAAC;UAAG;YAAAV,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACV,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACD;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEL,CAAC;IAEd,CAAC,MAAM,IAAItC,QAAQ,CAACE,WAAW,KAAK,cAAc,EAAE;MAChD,oBACIP,OAAA;QAAAsC,QAAA,eACItC,OAAA;UAAKuC,SAAS,EAAC,YAAY;UAAAD,QAAA,gBACvBtC,OAAA;YAAAsC,QAAA,EAAO;UAAS;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eACxB3C,OAAA;YACIiD,IAAI,EAAC,QAAQ;YACbV,SAAS,EAAC,cAAc;YACxBzB,IAAI,EAAC,gBAAgB;YACrBC,KAAK,EAAEV,QAAQ,CAACI,cAAe;YAC/BmC,QAAQ,EAAEhC,iBAAkB;YAC5BsC,GAAG,EAAC;UAAG;YAAAV,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACV,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACD;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACL,CAAC;IAEd;IACA,OAAO,IAAI,CAAC,CAAC;EACjB,CAAC;;EAED,MAAMQ,mBAAmB,GAAGA,CAAA,KAAM;IAC9B,IAAI9C,QAAQ,CAACK,UAAU,KAAK,eAAe,EAAE;MAAA,IAAA0C,QAAA;MACzC,oBACIpD,OAAA;QAAAsC,QAAA,eAEItC,OAAA;UAAKuC,SAAS,EAAC,YAAY;UAAAD,QAAA,gBACvBtC,OAAA;YAAAsC,QAAA,EAAO;UAAW;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eAC1B3C,OAAA;YACIuC,SAAS,EAAC,cAAc;YACxBzB,IAAI,EAAC,QAAQ;YACbC,KAAK,EAAEV,QAAQ,CAACM,MAAO;YACvBiC,QAAQ,EAAEhC,iBAAkB;YAAA0B,QAAA,gBAE5BtC,OAAA;cAAqBe,KAAK,EAAC,QAAQ;cAAAuB,QAAA,EAAC;YAEpC,GAFY,QAAQ;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAEZ,CAAC,GAAAS,QAAA,GACRP,MAAM,cAAAO,QAAA,uBAANA,QAAA,CAAQN,GAAG,CAAED,MAAM,iBAChB7C,OAAA;cAAqBe,KAAK,EAAE8B,MAAO;cAAAP,QAAA,EAC9BO;YAAM,GADEA,MAAM;cAAAL,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAEX,CACX,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAEE,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACR;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACL,CAAC;IAEd,CAAC,MAAM,IAAItC,QAAQ,CAACK,UAAU,KAAK,cAAc,EAAE;MAAA,IAAA2C,WAAA;MAC/C,oBACIrD,OAAA;QAAAsC,QAAA,eAEItC,OAAA;UAAKuC,SAAS,EAAC,YAAY;UAAAD,QAAA,gBACvBtC,OAAA;YAAAsC,QAAA,EAAO;UAAU;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eACzB3C,OAAA;YACIuC,SAAS,EAAC,cAAc;YACxBzB,IAAI,EAAC,QAAQ;YACbC,KAAK,EAAEV,QAAQ,CAACM,MAAO;YACvBiC,QAAQ,EAAEhC,iBAAkB;YAAA0B,QAAA,gBAE5BtC,OAAA;cAAkBe,KAAK,EAAC,KAAK;cAAAuB,QAAA,EAAC;YAE9B,GAFY,KAAK;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAET,CAAC,GAAAU,WAAA,GACRjC,SAAS,cAAAiC,WAAA,uBAATA,WAAA,CAAWP,GAAG,CAAExB,KAAK,iBAClBtB,OAAA;cAA4Be,KAAK,EAAEO,KAAK,CAACC,SAAU;cAAAe,QAAA,EAC9ChB,KAAK,CAACC;YAAS,GADPD,KAAK,CAACE,OAAO;cAAAgB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAElB,CACX,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACE,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACR;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEL,CAAC;IAEd;IACA,OAAO,IAAI,CAAC,CAAC;EACjB,CAAC;;EAID,oBACI3C,OAAA,CAACL,KAAK;IAACO,IAAI,EAAEA,IAAK;IAACoD,MAAM,EAAEnD,WAAY;IAAAmC,QAAA,gBACnCtC,OAAA,CAACL,KAAK,CAAC4D,MAAM;MAACC,WAAW;MAAAlB,QAAA,eACrBtC,OAAA,CAACL,KAAK,CAAC8D,KAAK;QAAAnB,QAAA,EAAC;MAAK;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAa;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACtB,CAAC,eACf3C,OAAA,CAACL,KAAK,CAAC+D,IAAI;MAAApB,QAAA,eACPtC,OAAA;QAAKuC,SAAS,EAAC,KAAK;QAAAD,QAAA,gBAChBtC,OAAA;UAAKuC,SAAS,EAAC,UAAU;UAAAD,QAAA,eACrBtC,OAAA;YAAKuC,SAAS,EAAC,YAAY;YAAAD,QAAA,gBACvBtC,OAAA;cAAAsC,QAAA,EAAO;YAAY;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC,eAC3B3C,OAAA;cACIuC,SAAS,EAAC,cAAc;cACxBzB,IAAI,EAAC,aAAa;cAClBC,KAAK,EAAEV,QAAQ,CAACE,WAAY;cAC5BqC,QAAQ,EAAEhC,iBAAkB;cAAA0B,QAAA,gBAE5BtC,OAAA;gBAAQe,KAAK,EAAC,eAAe;gBAAAuB,QAAA,EAAC;cAAa;gBAAAE,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC,eACpD3C,OAAA;gBAAQe,KAAK,EAAC,cAAc;gBAAAuB,QAAA,EAAC;cAAY;gBAAAE,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC,eAClD3C,OAAA;gBAAQe,KAAK,EAAC,wBAAwB;gBAAAuB,QAAA,EAAC;cAAsB;gBAAAE,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC,eACtE3C,OAAA;gBAAQe,KAAK,EAAC,cAAc;gBAAAuB,QAAA,EAAC;cAAY;gBAAAE,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC9C,CAAC,EACRR,oBAAoB,CAAC,CAAC;UAAA;YAAAK,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACtB;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACL,CAAC,eACN3C,OAAA;UAAKuC,SAAS,EAAC,UAAU;UAAAD,QAAA,eACrBtC,OAAA;YAAKuC,SAAS,EAAC,YAAY;YAAAD,QAAA,gBACvBtC,OAAA;cAAAsC,QAAA,EAAO;YAAW;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC,eAC1B3C,OAAA;cACIuC,SAAS,EAAC,cAAc;cACxBzB,IAAI,EAAC,YAAY;cACjBC,KAAK,EAAEV,QAAQ,CAACK,UAAW;cAC3BkC,QAAQ,EAAEhC,iBAAkB;cAAA0B,QAAA,gBAE5BtC,OAAA;gBAAQe,KAAK,EAAC,eAAe;gBAAAuB,QAAA,EAAC;cAAa;gBAAAE,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC,eACpD3C,OAAA;gBAAQe,KAAK,EAAC,cAAc;gBAAAuB,QAAA,EAAC;cAAY;gBAAAE,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC9C,CAAC,EACRQ,mBAAmB,CAAC,CAAC;UAAA;YAAAX,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACrB;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACL,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC,eACb3C,OAAA,CAACL,KAAK,CAACgE,MAAM;MAAArB,QAAA,gBACTtC,OAAA,CAACJ,MAAM;QAACgE,OAAO,EAAC,WAAW;QAACC,OAAO,EAAE1D,WAAY;QAAAmC,QAAA,EAAC;MAElD;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACT3C,OAAA,CAACJ,MAAM;QAACgE,OAAO,EAAC,SAAS;QAACC,OAAO,EAAE3C,gBAAiB;QAAAoB,QAAA,EAAC;MAErD;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACZ,CAAC;AAEhB,CAAC;AAACvC,EAAA,CAtSIH,OAAO;AAAA6D,EAAA,GAAP7D,OAAO;AAwSb,eAAeA,OAAO;AAAC,IAAA6D,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}