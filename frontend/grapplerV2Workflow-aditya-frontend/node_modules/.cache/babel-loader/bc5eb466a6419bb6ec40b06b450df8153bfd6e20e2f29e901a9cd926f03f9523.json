{"ast":null,"code":"import { Client } from 'webstomp-client';\nconst WebSocketService = {\n  stompClient: null,\n  connect: () => {\n    const socket = new WebSocket('ws://localhost:8080/websocket-endpoint');\n    const stompClient = new Client({\n      webSocketFactory: () => socket,\n      debug: msg => console.log(msg)\n    });\n    stompClient.activate();\n    WebSocketService.stompClient = stompClient;\n    stompClient.onConnect = () => {\n      console.log('Connected to WebSocket');\n    };\n    stompClient.onStompError = frame => {\n      console.error('Stomp error:', frame.headers['message']);\n    };\n  },\n  subscribeToMessages: callback => {\n    WebSocketService.stompClient.subscribe('/topic/messages', response => {\n      const message = JSON.parse(response.body);\n      callback(message);\n    });\n  },\n  sendMessage: message => {\n    WebSocketService.stompClient.publish({\n      destination: '/app/send-message',\n      body: JSON.stringify({\n        message\n      })\n    });\n  }\n};\nexport default WebSocketService;","map":{"version":3,"names":["Client","WebSocketService","stompClient","connect","socket","WebSocket","webSocketFactory","debug","msg","console","log","activate","onConnect","onStompError","frame","error","headers","subscribeToMessages","callback","subscribe","response","message","JSON","parse","body","sendMessage","publish","destination","stringify"],"sources":["C:/grapplerV2Workflow-aditya-frontend/src/Api/WebSocketService.js"],"sourcesContent":["import { Client } from 'webstomp-client';\r\n\r\nconst WebSocketService = {\r\n    stompClient: null,\r\n\r\n    connect: () => {\r\n        const socket = new WebSocket('ws://localhost:8080/websocket-endpoint');\r\n        const stompClient = new Client({\r\n            webSocketFactory: () => socket,\r\n            debug: (msg) => console.log(msg),\r\n        });\r\n\r\n        stompClient.activate();\r\n        WebSocketService.stompClient = stompClient;\r\n\r\n        stompClient.onConnect = () => {\r\n            console.log('Connected to WebSocket');\r\n        };\r\n\r\n        stompClient.onStompError = (frame) => {\r\n            console.error('Stomp error:', frame.headers['message']);\r\n        };\r\n    },\r\n\r\n    subscribeToMessages: (callback) => {\r\n        WebSocketService.stompClient.subscribe('/topic/messages', (response) => {\r\n            const message = JSON.parse(response.body);\r\n            callback(message);\r\n        });\r\n    },\r\n\r\n    sendMessage: (message) => {\r\n        WebSocketService.stompClient.publish({\r\n            destination: '/app/send-message',\r\n            body: JSON.stringify({ message }),\r\n        });\r\n    },\r\n};\r\n\r\nexport default WebSocketService;\r\n"],"mappings":"AAAA,SAASA,MAAM,QAAQ,iBAAiB;AAExC,MAAMC,gBAAgB,GAAG;EACrBC,WAAW,EAAE,IAAI;EAEjBC,OAAO,EAAEA,CAAA,KAAM;IACX,MAAMC,MAAM,GAAG,IAAIC,SAAS,CAAC,wCAAwC,CAAC;IACtE,MAAMH,WAAW,GAAG,IAAIF,MAAM,CAAC;MAC3BM,gBAAgB,EAAEA,CAAA,KAAMF,MAAM;MAC9BG,KAAK,EAAGC,GAAG,IAAKC,OAAO,CAACC,GAAG,CAACF,GAAG;IACnC,CAAC,CAAC;IAEFN,WAAW,CAACS,QAAQ,CAAC,CAAC;IACtBV,gBAAgB,CAACC,WAAW,GAAGA,WAAW;IAE1CA,WAAW,CAACU,SAAS,GAAG,MAAM;MAC1BH,OAAO,CAACC,GAAG,CAAC,wBAAwB,CAAC;IACzC,CAAC;IAEDR,WAAW,CAACW,YAAY,GAAIC,KAAK,IAAK;MAClCL,OAAO,CAACM,KAAK,CAAC,cAAc,EAAED,KAAK,CAACE,OAAO,CAAC,SAAS,CAAC,CAAC;IAC3D,CAAC;EACL,CAAC;EAEDC,mBAAmB,EAAGC,QAAQ,IAAK;IAC/BjB,gBAAgB,CAACC,WAAW,CAACiB,SAAS,CAAC,iBAAiB,EAAGC,QAAQ,IAAK;MACpE,MAAMC,OAAO,GAAGC,IAAI,CAACC,KAAK,CAACH,QAAQ,CAACI,IAAI,CAAC;MACzCN,QAAQ,CAACG,OAAO,CAAC;IACrB,CAAC,CAAC;EACN,CAAC;EAEDI,WAAW,EAAGJ,OAAO,IAAK;IACtBpB,gBAAgB,CAACC,WAAW,CAACwB,OAAO,CAAC;MACjCC,WAAW,EAAE,mBAAmB;MAChCH,IAAI,EAAEF,IAAI,CAACM,SAAS,CAAC;QAAEP;MAAQ,CAAC;IACpC,CAAC,CAAC;EACN;AACJ,CAAC;AAED,eAAepB,gBAAgB"},"metadata":{},"sourceType":"module","externalDependencies":[]}