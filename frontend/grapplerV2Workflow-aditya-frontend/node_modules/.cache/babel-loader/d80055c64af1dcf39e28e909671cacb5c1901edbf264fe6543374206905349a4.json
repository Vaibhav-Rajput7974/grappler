{"ast":null,"code":"// WebSocketService.js\nimport { Client } from '@stomp/stompjs';\nlet stompClient = null;\nexport const connect = () => {\n  const socket = new WebSocket('http://localhost:8080/websocket-endpoint');\n  stompClient = new Client({\n    webSocketFactory: () => socket,\n    reconnectDelay: 5000,\n    heartbeatIncoming: 4000,\n    heartbeatOutgoing: 4000\n  });\n  stompClient.activate();\n};\nexport const disconnect = () => {\n  if (stompClient !== null) {\n    stompClient.deactivate();\n    console.log('Disconnected from WebSocket');\n  }\n};\nexport const sendMessage = message => {\n  stompClient.publish({\n    destination: '/app/sendMessage',\n    body: JSON.stringify({\n      message\n    })\n  });\n};\nexport const subscribeToMessages = callback => {\n  stompClient.subscribe('/topic/messages', response => {\n    const message = JSON.parse(response.body);\n    callback(message);\n  });\n};","map":{"version":3,"names":["Client","stompClient","connect","socket","WebSocket","webSocketFactory","reconnectDelay","heartbeatIncoming","heartbeatOutgoing","activate","disconnect","deactivate","console","log","sendMessage","message","publish","destination","body","JSON","stringify","subscribeToMessages","callback","subscribe","response","parse"],"sources":["C:/grapplerV2Workflow-aditya-frontend/src/Api/WebSocketService.js"],"sourcesContent":["// WebSocketService.js\r\nimport { Client } from '@stomp/stompjs';\r\n\r\nlet stompClient = null;\r\n\r\nexport const connect = () => {\r\n    const socket = new WebSocket('http://localhost:8080/websocket-endpoint');\r\n    stompClient = new Client({\r\n        webSocketFactory: () => socket,\r\n        reconnectDelay: 5000,\r\n        heartbeatIncoming: 4000,\r\n        heartbeatOutgoing: 4000,\r\n    });\r\n\r\n    stompClient.activate();\r\n};\r\n\r\nexport const disconnect = () => {\r\n    if (stompClient !== null) {\r\n        stompClient.deactivate();\r\n        console.log('Disconnected from WebSocket');\r\n    }\r\n};\r\n\r\nexport const sendMessage = (message) => {\r\n    stompClient.publish({\r\n        destination: '/app/sendMessage',\r\n        body: JSON.stringify({ message }),\r\n    });\r\n};\r\n\r\nexport const subscribeToMessages = (callback) => {\r\n    stompClient.subscribe('/topic/messages', (response) => {\r\n        const message = JSON.parse(response.body);\r\n        callback(message);\r\n    });\r\n};\r\n"],"mappings":"AAAA;AACA,SAASA,MAAM,QAAQ,gBAAgB;AAEvC,IAAIC,WAAW,GAAG,IAAI;AAEtB,OAAO,MAAMC,OAAO,GAAGA,CAAA,KAAM;EACzB,MAAMC,MAAM,GAAG,IAAIC,SAAS,CAAC,0CAA0C,CAAC;EACxEH,WAAW,GAAG,IAAID,MAAM,CAAC;IACrBK,gBAAgB,EAAEA,CAAA,KAAMF,MAAM;IAC9BG,cAAc,EAAE,IAAI;IACpBC,iBAAiB,EAAE,IAAI;IACvBC,iBAAiB,EAAE;EACvB,CAAC,CAAC;EAEFP,WAAW,CAACQ,QAAQ,CAAC,CAAC;AAC1B,CAAC;AAED,OAAO,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAC5B,IAAIT,WAAW,KAAK,IAAI,EAAE;IACtBA,WAAW,CAACU,UAAU,CAAC,CAAC;IACxBC,OAAO,CAACC,GAAG,CAAC,6BAA6B,CAAC;EAC9C;AACJ,CAAC;AAED,OAAO,MAAMC,WAAW,GAAIC,OAAO,IAAK;EACpCd,WAAW,CAACe,OAAO,CAAC;IAChBC,WAAW,EAAE,kBAAkB;IAC/BC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MAAEL;IAAQ,CAAC;EACpC,CAAC,CAAC;AACN,CAAC;AAED,OAAO,MAAMM,mBAAmB,GAAIC,QAAQ,IAAK;EAC7CrB,WAAW,CAACsB,SAAS,CAAC,iBAAiB,EAAGC,QAAQ,IAAK;IACnD,MAAMT,OAAO,GAAGI,IAAI,CAACM,KAAK,CAACD,QAAQ,CAACN,IAAI,CAAC;IACzCI,QAAQ,CAACP,OAAO,CAAC;EACrB,CAAC,CAAC;AACN,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}