{"ast":null,"code":"var _jsxFileName = \"C:\\\\grapplerV2Workflow-aditya-frontend\\\\src\\\\Api\\\\WebSocketService.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport Stomp from 'stompjs';\nimport SockJS from 'sockjs-client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst WebSocketComponent = () => {\n  _s();\n  const socketUrl = 'http://localhost:8080/ws';\n  const stompClient = Stomp.over(new SockJS(socketUrl));\n  const connect = () => {\n    stompClient.connect({}, () => {\n      console.log('Connected to WebSocket');\n      stompClient.subscribe('/topic/ticket-updates', message => {\n        console.log('Received message:', message);\n        lo;\n      });\n    });\n  };\n  useEffect(() => {\n    connect();\n    return () => {\n      if (stompClient !== null) {\n        stompClient.disconnect();\n      }\n    };\n  }, []);\n  // Function to send a message\n  const sendMessage = message => {\n    stompClient.send('/app/chat', {}, JSON.stringify(message));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n_s(WebSocketComponent, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = WebSocketComponent;\nexport default WebSocketComponent;\nvar _c;\n$RefreshReg$(_c, \"WebSocketComponent\");","map":{"version":3,"names":["React","useEffect","Stomp","SockJS","jsxDEV","_jsxDEV","WebSocketComponent","_s","socketUrl","stompClient","over","connect","console","log","subscribe","message","lo","disconnect","sendMessage","send","JSON","stringify","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/grapplerV2Workflow-aditya-frontend/src/Api/WebSocketService.js"],"sourcesContent":["import React, { useEffect } from 'react';\r\nimport Stomp from 'stompjs';\r\nimport SockJS from 'sockjs-client';\r\nconst WebSocketComponent = () => {\r\n  const socketUrl = 'http://localhost:8080/ws';\r\n  const stompClient = Stomp.over(new SockJS(socketUrl));\r\n  const connect = () => {\r\n    stompClient.connect({}, () => {\r\n      console.log('Connected to WebSocket');\r\n      stompClient.subscribe('/topic/ticket-updates', (message) => {\r\n        console.log('Received message:', message);\r\n        lo\r\n      });\r\n    });\r\n  };\r\n  useEffect(() => {\r\n    connect();\r\n    return () => {\r\n      if (stompClient !== null) {\r\n        stompClient.disconnect();\r\n      }\r\n    };\r\n  }, []);\r\n  // Function to send a message\r\n  const sendMessage = (message) => {\r\n    stompClient.send('/app/chat', {}, JSON.stringify(message));\r\n  };\r\n  \r\n  return (\r\n    <div>\r\n      {/* Your React component content */}\r\n    </div>\r\n  );\r\n};\r\nexport default WebSocketComponent;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,OAAOC,KAAK,MAAM,SAAS;AAC3B,OAAOC,MAAM,MAAM,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AACnC,MAAMC,kBAAkB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC/B,MAAMC,SAAS,GAAG,0BAA0B;EAC5C,MAAMC,WAAW,GAAGP,KAAK,CAACQ,IAAI,CAAC,IAAIP,MAAM,CAACK,SAAS,CAAC,CAAC;EACrD,MAAMG,OAAO,GAAGA,CAAA,KAAM;IACpBF,WAAW,CAACE,OAAO,CAAC,CAAC,CAAC,EAAE,MAAM;MAC5BC,OAAO,CAACC,GAAG,CAAC,wBAAwB,CAAC;MACrCJ,WAAW,CAACK,SAAS,CAAC,uBAAuB,EAAGC,OAAO,IAAK;QAC1DH,OAAO,CAACC,GAAG,CAAC,mBAAmB,EAAEE,OAAO,CAAC;QACzCC,EAAE;MACJ,CAAC,CAAC;IACJ,CAAC,CAAC;EACJ,CAAC;EACDf,SAAS,CAAC,MAAM;IACdU,OAAO,CAAC,CAAC;IACT,OAAO,MAAM;MACX,IAAIF,WAAW,KAAK,IAAI,EAAE;QACxBA,WAAW,CAACQ,UAAU,CAAC,CAAC;MAC1B;IACF,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EACN;EACA,MAAMC,WAAW,GAAIH,OAAO,IAAK;IAC/BN,WAAW,CAACU,IAAI,CAAC,WAAW,EAAE,CAAC,CAAC,EAAEC,IAAI,CAACC,SAAS,CAACN,OAAO,CAAC,CAAC;EAC5D,CAAC;EAED,oBACEV,OAAA;IAAAiB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEK,CAAC;AAEV,CAAC;AAAClB,EAAA,CA9BID,kBAAkB;AAAAoB,EAAA,GAAlBpB,kBAAkB;AA+BxB,eAAeA,kBAAkB;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}