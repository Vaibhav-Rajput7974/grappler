{"ast":null,"code":"var _jsxFileName = \"C:\\\\grapplerV2Workflow-aditya-frontend\\\\src\\\\components\\\\Project\\\\Project.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useParams } from \"react-router-dom\";\nimport Stage from \"../Stage/Stage\";\nimport { getProjectById, updateStageOrder } from \"../../slice/ProjectSlice\";\nimport { getProjectId } from \"../../Api/AllApi\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Project = () => {\n  _s();\n  const {\n    projectById\n  } = useSelector(state => state.Project);\n  const {\n    projectId\n  } = useParams();\n  const dispatch = useDispatch();\n  useEffect(() => {\n    getProjectId(projectId).then(response => {\n      dispatch(getProjectById(response.data.data));\n    }).catch(error => {\n      console.error(\"Error fetching data: \", error);\n    });\n  }, [projectId, dispatch]);\n  const onDragEnd = result => {\n    if (!result.destination) {\n      return; // Item dropped outside the list, no action needed\n    }\n\n    const sourceIndex = result.source.index;\n    const destinationIndex = result.destination.index;\n    if (sourceIndex === destinationIndex) {\n      return; // Item dropped in the same position, no action needed\n    }\n\n    // Reorder stages in your Redux store based on the source and destination indexes\n    const reorderedStages = Array.from(projectById.stageList);\n    const [movedStage] = reorderedStages.splice(sourceIndex, 1);\n    reorderedStages.splice(destinationIndex, 0, movedStage);\n    axios.put(`http://localhost:8080/projects/${projectById.projectId}/changeorder/${sourceIndex}/${destinationIndex}`).then(response => {\n      console.log(\"stage order Change \", response.data.data);\n    }).catch(error => {\n      console.error(\"Error occure while changeing the order : \", error);\n    });\n    dispatch(updateStageOrder(reorderedStages));\n\n    // Ensure your Redux store is updated with the new order of stages\n    // The actual implementation may vary depending on your Redux setup\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      width: \"90%\",\n      position: \"absolute\",\n      right: \"-150px\",\n      top: \"100px\"\n    },\n    children: [projectById ? /*#__PURE__*/_jsxDEV(DragDropContext, {\n      onDragEnd: onDragEnd,\n      children: /*#__PURE__*/_jsxDEV(Droppable, {\n        droppableId: \"stage-list\",\n        direction: \"horizontal\",\n        children: provided => {\n          var _projectById$stageLis;\n          return /*#__PURE__*/_jsxDEV(\"ul\", {\n            className: \"list-unstyled ps-3 stageComponent\",\n            style: {\n              display: \"flex\",\n              overflowX: \"scroll\"\n            },\n            ref: provided.innerRef,\n            ...provided.droppableProps,\n            children: [(_projectById$stageLis = projectById.stageList) === null || _projectById$stageLis === void 0 ? void 0 : _projectById$stageLis.map((stage, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"stage-container\",\n              children: /*#__PURE__*/_jsxDEV(Draggable, {\n                draggableId: stage.stageId.toString(),\n                index: index,\n                children: provided => /*#__PURE__*/_jsxDEV(\"li\", {\n                  ref: provided.innerRef,\n                  ...provided.draggableProps,\n                  ...provided.dragHandleProps,\n                  children: /*#__PURE__*/_jsxDEV(Stage, {\n                    stageIndex: index\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 89,\n                    columnNumber: 27\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 84,\n                  columnNumber: 25\n                }, this)\n              }, stage.stageId, false, {\n                fileName: _jsxFileName,\n                lineNumber: 78,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 19\n            }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"plus-button-container\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 17\n            }, this), provided.placeholder]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 15\n          }, this);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Data Not found\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n};\n_s(Project, \"HkhbGvkk2ZG88Hj1UiiKe99+oeg=\", false, function () {\n  return [useSelector, useParams, useDispatch];\n});\n_c = Project;\nexport default Project;\nvar _c;\n$RefreshReg$(_c, \"Project\");","map":{"version":3,"names":["React","useEffect","useDispatch","useSelector","useParams","Stage","getProjectById","updateStageOrder","getProjectId","ToastContainer","toast","DragDropContext","Droppable","Draggable","axios","jsxDEV","_jsxDEV","Project","_s","projectById","state","projectId","dispatch","then","response","data","catch","error","console","onDragEnd","result","destination","sourceIndex","source","index","destinationIndex","reorderedStages","Array","from","stageList","movedStage","splice","put","log","style","width","position","right","top","children","droppableId","direction","provided","_projectById$stageLis","className","display","overflowX","ref","innerRef","droppableProps","map","stage","draggableId","stageId","toString","draggableProps","dragHandleProps","stageIndex","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","_c","$RefreshReg$"],"sources":["C:/grapplerV2Workflow-aditya-frontend/src/components/Project/Project.js"],"sourcesContent":["import React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useParams } from \"react-router-dom\";\nimport Stage from \"../Stage/Stage\";\nimport { getProjectById, updateStageOrder } from \"../../slice/ProjectSlice\";\nimport { getProjectId } from \"../../Api/AllApi\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\nimport axios from \"axios\";\n\nconst Project = () => {\n  const { projectById } = useSelector((state) => state.Project);\n  const { projectId } = useParams();\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    getProjectId(projectId)\n      .then((response) => {\n        dispatch(getProjectById(response.data.data));\n      })\n      .catch((error) => {\n        console.error(\"Error fetching data: \", error);\n      });\n  }, [projectId, dispatch]);\n\n  const onDragEnd = (result) => {\n    if (!result.destination) {\n      return; // Item dropped outside the list, no action needed\n    }\n\n    const sourceIndex = result.source.index;\n    const destinationIndex = result.destination.index;\n    if (sourceIndex === destinationIndex) {\n      return; // Item dropped in the same position, no action needed\n    }\n\n    // Reorder stages in your Redux store based on the source and destination indexes\n    const reorderedStages = Array.from(projectById.stageList);\n    const [movedStage] = reorderedStages.splice(sourceIndex, 1);\n    reorderedStages.splice(destinationIndex, 0, movedStage);\n\n    axios.put(`http://localhost:8080/projects/${projectById.projectId}/changeorder/${sourceIndex}/${destinationIndex}`)\n    .then((response) => {\n      console.log(\"stage order Change \", response.data.data);\n    })\n    .catch((error) => {\n      console.error(\"Error occure while changeing the order : \", error);\n    });\n    dispatch(updateStageOrder(reorderedStages));\n\n    // Ensure your Redux store is updated with the new order of stages\n    // The actual implementation may vary depending on your Redux setup\n  };\n\n  return (\n    <div\n      style={{\n        width: \"90%\",\n        position: \"absolute\",\n        right: \"-150px\",\n        top: \"100px\",\n      }}\n    >\n      {projectById ? (\n        <DragDropContext onDragEnd={onDragEnd}>\n          <Droppable droppableId=\"stage-list\" direction=\"horizontal\">\n            {(provided) => (\n              <ul\n              \n                className=\"list-unstyled ps-3 stageComponent\"\n                style={{ display: \"flex\", overflowX: \"scroll\" }}\n                ref={provided.innerRef}\n                {...provided.droppableProps}\n              >\n                {projectById.stageList?.map((stage, index) => (\n                  <div className=\"stage-container\">\n                    <Draggable\n                      key={stage.stageId}\n                      draggableId={stage.stageId.toString()}\n                      index={index}\n                    >\n                      {(provided) => (\n                        <li\n                          ref={provided.innerRef}\n                          {...provided.draggableProps}\n                          {...provided.dragHandleProps}\n                        >\n                          <Stage stageIndex={index} />\n                        </li>\n                      )}\n                    </Draggable>\n                  </div>\n                ))}\n                <div className=\"plus-button-container\"></div>\n                {provided.placeholder}\n              </ul>\n            )}\n          </Droppable>\n        </DragDropContext>\n      ) : (\n        <p>Data Not found</p>\n      )}\n      <ToastContainer />\n    </div>\n  );\n};\n\nexport default Project;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}