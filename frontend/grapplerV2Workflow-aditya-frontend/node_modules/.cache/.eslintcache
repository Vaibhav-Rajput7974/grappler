[{"C:\\grapplerV2Workflow-aditya-frontend\\src\\index.js":"1","C:\\grapplerV2Workflow-aditya-frontend\\src\\reportWebVitals.js":"2","C:\\grapplerV2Workflow-aditya-frontend\\src\\App.js":"3","C:\\grapplerV2Workflow-aditya-frontend\\src\\store\\store.js":"4","C:\\grapplerV2Workflow-aditya-frontend\\src\\components\\Stage\\Stage.js":"5","C:\\grapplerV2Workflow-aditya-frontend\\src\\components\\Project\\NavBar.js":"6","C:\\grapplerV2Workflow-aditya-frontend\\src\\components\\Project\\Project.js":"7","C:\\grapplerV2Workflow-aditya-frontend\\src\\components\\Project\\Header.js":"8","C:\\grapplerV2Workflow-aditya-frontend\\src\\slice\\ProjectSlice.js":"9","C:\\grapplerV2Workflow-aditya-frontend\\src\\components\\Stage\\TaskModal.js":"10","C:\\grapplerV2Workflow-aditya-frontend\\src\\components\\Stage\\Task.js":"11","C:\\grapplerV2Workflow-aditya-frontend\\src\\Api\\AllApi.js":"12","C:\\grapplerV2Workflow-aditya-frontend\\src\\components\\Rule\\RuleModal.js":"13","C:\\grapplerV2Workflow-aditya-frontend\\src\\components\\Rule\\AddRule.js":"14","C:\\grapplerV2Workflow-aditya-frontend\\src\\Api\\WebSocketService.js":"15","C:\\grapplerV2Workflow-aditya-frontend\\src\\Api\\YourReactComponent.js":"16"},{"size":498,"mtime":1698936617078,"results":"17","hashOfConfig":"18"},{"size":362,"mtime":1698936617236,"results":"19","hashOfConfig":"18"},{"size":837,"mtime":1700462605103,"results":"20","hashOfConfig":"18"},{"size":228,"mtime":1698936618296,"results":"21","hashOfConfig":"18"},{"size":6164,"mtime":1700472323526,"results":"22","hashOfConfig":"18"},{"size":2760,"mtime":1698936617678,"results":"23","hashOfConfig":"18"},{"size":3709,"mtime":1700139755959,"results":"24","hashOfConfig":"18"},{"size":7675,"mtime":1699192397762,"results":"25","hashOfConfig":"18"},{"size":4000,"mtime":1700469283818,"results":"26","hashOfConfig":"18"},{"size":6676,"mtime":1700573965987,"results":"27","hashOfConfig":"18"},{"size":8359,"mtime":1700555058521,"results":"28","hashOfConfig":"18"},{"size":1119,"mtime":1698936617398,"results":"29","hashOfConfig":"18"},{"size":2780,"mtime":1700562692700,"results":"30","hashOfConfig":"18"},{"size":23027,"mtime":1700556430796,"results":"31","hashOfConfig":"18"},{"size":1196,"mtime":1700470988321,"results":"32","hashOfConfig":"18"},{"size":1022,"mtime":1700487598026,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"38"},"168595y",{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"38"},{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"38"},{"filePath":"59","messages":"60","suppressedMessages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"38"},{"filePath":"63","messages":"64","suppressedMessages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"69","messages":"70","suppressedMessages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"72","messages":"73","suppressedMessages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"75","messages":"76","suppressedMessages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"78","messages":"79","suppressedMessages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"81","messages":"82","suppressedMessages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"84","messages":"85","suppressedMessages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\grapplerV2Workflow-aditya-frontend\\src\\index.js",["87"],[],"import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport reportWebVitals from './reportWebVitals';\nimport store from './store/store';\nimport { BrowserRouter, Routes } from 'react-router-dom';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <Provider store={store}>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </Provider>\n);\n\n\nreportWebVitals();\n",["88"],"C:\\grapplerV2Workflow-aditya-frontend\\src\\reportWebVitals.js",[],[],"C:\\grapplerV2Workflow-aditya-frontend\\src\\App.js",["89","90","91","92"],[],"C:\\grapplerV2Workflow-aditya-frontend\\src\\store\\store.js",[],[],"C:\\grapplerV2Workflow-aditya-frontend\\src\\components\\Stage\\Stage.js",["93","94","95","96","97","98"],[],"C:\\grapplerV2Workflow-aditya-frontend\\src\\components\\Project\\NavBar.js",["99"],[],"import React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Link, NavLink } from \"react-router-dom\";\nimport { getAllProject, getProjectById } from \"../../slice/ProjectSlice\";\nimport { getProjectId, getProjects } from \"../../Api/AllApi\";\n\nconst NavBar = () => {\n  const { projects } = useSelector((state) => state.Project);\n  const dispatch = useDispatch();\n\n  const [active, setActive] = useState(false);\n\n  function handleClick(projectId) {\n    setActive(true);\n    getProjectId(projectId)\n      .then((response) => {\n        dispatch(getProjectById(response.data.data));\n      })\n      .catch((error) => {\n        console.error(\"Error fetching data: \", error);\n      });\n  }\n\n  useEffect(() => {\n    getProjects()\n      .then((response) => {\n        dispatch(getAllProject(response.data.data));\n      })\n      .catch((error) => {\n        console.error(\"Error fetching data: \", error);\n      });\n  }, []);\n\n  const linkStyle = {\n    color: \"white\",\n    textDecoration: \"none\",\n    fontSize: \"18px\",\n    marginBottom: \"10px\",\n  };\n\n  return (\n    <div\n      style={{position: \"fixed\",width: \"250px\",height: \"100vh\",backgroundColor: \"#f8f9fa\",borderRight: \"1px solid #dee2e6\"}}\n    >\n      <nav id=\"sidebar\" style={{ padding: \"10px\" , marginTop: \"70px\" }}>\n        <ul className=\"nav flex-column\">\n          <li className={`nav-item.${active ? \"active\" : \"\"}`}>\n            <Link className=\"nav-link\" to=\"/dashboard\" style={linkStyle} onClick={() => setActive(true)}>\n              Dashboard\n            </Link>\n          </li>\n          <li className={`nav-item ${active ? \"active\" : \"\"}`}>\n            <a\n              className=\"nav-link\"\n              href=\"#projectsCollapse\"\n              data-bs-toggle=\"collapse\"\n              style={linkStyle}\n            >\n              Projects\n            </a>\n            <div\n              className={`collapse.${active ? \"show\" : \"\"}`}\n              id=\"projectsCollapse\"\n            >\n              {projects ? (\n                <ul className=\"list-unstyled ps-3\">\n                  {projects.map((project) => (\n                    <li key={project.projectId}>\n                      <NavLink\n                        className=\"nav-link project-link\"\n                        to={`/projects/${project.projectId}`}\n                        onClick={() => handleClick(project.projectId)}\n                      >\n                        {project.projectName}\n                      </NavLink>\n                    </li>\n                  ))}\n                </ul>\n              ) : (\n                <p style={linkStyle}>Data Not found</p>\n              )}\n            </div>\n          </li>\n        </ul>\n      </nav>\n    </div>\n  );\n};\n\nexport default NavBar;\n","C:\\grapplerV2Workflow-aditya-frontend\\src\\components\\Project\\Project.js",["100"],[],"import React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useParams } from \"react-router-dom\";\nimport Stage from \"../Stage/Stage\";\nimport { getProjectById, updateStageOrder } from \"../../slice/ProjectSlice\";\nimport { getProjectId } from \"../../Api/AllApi\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\nimport axios from \"axios\";\n\nconst Project = () => {\n  const { projectById } = useSelector((state) => state.Project);\n  const { projectId } = useParams();\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    getProjectId(projectId)\n      .then((response) => {\n        dispatch(getProjectById(response.data.data));\n      })\n      .catch((error) => {\n        console.error(\"Error fetching data: \", error);\n      });\n  }, [projectId, dispatch]);\n\n  const onDragEnd = (result) => {\n    if (!result.destination) {\n      return; // Item dropped outside the list, no action needed\n    }\n\n    const sourceIndex = result.source.index;\n    const destinationIndex = result.destination.index;\n    if (sourceIndex === destinationIndex) {\n      return; // Item dropped in the same position, no action needed\n    }\n\n    // Reorder stages in your Redux store based on the source and destination indexes\n    const reorderedStages = Array.from(projectById.stageList);\n    const [movedStage] = reorderedStages.splice(sourceIndex, 1);\n    reorderedStages.splice(destinationIndex, 0, movedStage);\n\n    axios.put(`http://localhost:8080/projects/${projectById.projectId}/changeorder/${sourceIndex}/${destinationIndex}`)\n    .then((response) => {\n      console.log(\"stage order Change \", response.data.data);\n    })\n    .catch((error) => {\n      console.error(\"Error occure while changeing the order : \", error);\n    });\n    dispatch(updateStageOrder(reorderedStages));\n\n    // Ensure your Redux store is updated with the new order of stages\n    // The actual implementation may vary depending on your Redux setup\n  };\n\n  return (\n    <div\n      style={{\n        width: \"90%\",\n        position: \"absolute\",\n        right: \"-150px\",\n        top: \"100px\",\n      }}\n    >\n      {projectById ? (\n        <DragDropContext onDragEnd={onDragEnd}>\n          <Droppable droppableId=\"stage-list\" direction=\"horizontal\">\n            {(provided) => (\n              <ul\n                className=\"list-unstyled ps-3 stageComponent\"\n                style={{ display: \"flex\", overflowX: \"scroll\" }}\n                ref={provided.innerRef}\n                {...provided.droppableProps}\n              >\n                {projectById.stageList?.map((stage, index) => (\n                  <div className=\"stage-container\">\n                    <Draggable\n                      key={stage.stageId}\n                      draggableId={stage.stageId.toString()}\n                      index={index}\n                    >\n                      {(provided) => (\n                        <li\n                          ref={provided.innerRef}\n                          {...provided.draggableProps}\n                          {...provided.dragHandleProps}\n                        >\n                          <Stage stageIndex={index} />\n                        </li>\n                      )}\n                    </Draggable>\n                  </div>\n                ))}\n                <div className=\"plus-button-container\"></div>\n                {provided.placeholder}\n              </ul>\n            )}\n          </Droppable>\n        </DragDropContext>\n      ) : (\n        <p>Data Not found</p>\n      )}\n      <ToastContainer />\n    </div>\n  );\n};\n\nexport default Project;\n","C:\\grapplerV2Workflow-aditya-frontend\\src\\components\\Project\\Header.js",["101","102","103"],[],"import React, { useState } from \"react\";\nimport \"./Header.css\";\nimport { addProject } from \"../../Api/AllApi\";\nimport { createProject, addStage } from \"../../slice/ProjectSlice\";\nimport { useDispatch } from \"react-redux\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport { DropdownButton, Dropdown } from \"react-bootstrap\";\nimport { useSelector } from \"react-redux\";\nimport axios from \"axios\";\nimport RuleModal from \"../Rule/RuleModal\";\nimport AddRule from \"../Rule/AddRule\";\nconst Header = () => {\n  const [isDropdownVisible, setIsDropdownVisible] = useState(false);\n  const [selectedOption, setSelectedOption] = useState(null);\n  const [showTaskModal, setShowTaskModal] = useState(false);\n  const [showRuleModal, setShowRuleModal] = useState(false);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [newProjectName, setNewProjectName] = useState(\"\");\n  const [newProjectDescription, setNewProjectDescription] = useState(\"\");\n\n  const { status, stageList, projectById } = useSelector(\n    (state) => state.Project\n  );\n\n  const dispatch = useDispatch();\n\n  const handleAddTaskClick = () => {\n    setShowTaskModal(true);\n  };\n\n  const handleCloseTaskModal = () => {\n    setShowTaskModal(false);\n  };\n  const handleShowRuleModal = () => {\n    setShowRuleModal(true);\n  };\n  const handleCloseRuleModal = () => {\n    setShowRuleModal(false);\n  };\n\n  const [formData, setFormData] = useState({\n    previousStage: \"\",\n    currentStage: \"\",\n    condition: \"\",\n    nextStage: \"\",\n  });\n\n  const handleInputChange = (e) => {\n    const { name, value } = e.target;\n    setFormData((prevData) => ({\n      ...prevData,\n      [name]: value,\n    }));\n  };\n\n  const handleOptionSelect = (option) => {\n    setSelectedOption(option);\n    setIsDropdownVisible(false);\n    if (option === \"Add Rule\") {\n      setShowTaskModal(true);\n    }\n    if (option === \"Show Rule\") {\n      setShowRuleModal(true);\n    }\n  };\n\n\n  const openModal = () => {\n    setIsModalOpen(true);\n  };\n\n  const closeModal = () => {\n    setIsModalOpen(false);\n  };\n\n  const prejectCreateNotify = () =>\n    toast.success(\"Project Create Successfully...\", {\n      position: \"top-center\",\n      autoClose: 1000,\n      closeOnClick: true,\n      theme: \"light\",\n    });\n\n  // FOR THE VALIDATION\n  function isProjectNameValid(projectName) {\n    const trimmedProjectName = projectName.trim();\n    return /^[A-Za-z][A-Za-z0-9- ]*$/.test(trimmedProjectName);\n  }\n\n  const handleSaveProject = () => {\n    const newProjectData = {\n      projectName: newProjectName,\n      projectDescription: newProjectDescription,\n    };\n\n    addProject(newProjectData)\n      .then((response) => {\n        console.log(\"Project saved successfully\");\n        console.log(\"DSDS\", response.data.data);\n        dispatch(createProject(response.data.data));\n        prejectCreateNotify();\n        setNewProjectName(\"\");\n        setNewProjectDescription(\"\");\n      })\n      .catch((error) => {\n        console.error(\"Error saving the project: \", error);\n      });\n\n    closeModal();\n  };\n\n  const stageCreateNotify = () =>\n    toast.success(\"Stage Create Successfully...\", {\n      position: \"top-center\",\n      autoClose: 1000,\n      closeOnClick: true,\n      theme: \"light\",\n    });\n\n  function handleAddStages() {\n    const newStage = {\n      stageName: \"unknown\",\n    };\n    axios\n      .post(\n        `http://localhost:8080/projects/${projectById.projectId}/stages`,\n        newStage\n      )\n      .then((response) => {\n        dispatch(addStage({ data: response.data.data }));\n        stageCreateNotify();\n      })\n      .catch((error) => {\n        console.error(\"Error fetching data: \", error);\n      });\n  }\n\n  return (\n    <div className=\"header\">\n      <div style={{ display: \"flex\", alignItems: \"center\" }}>\n        <img\n          src=\"https://static.ambitionbox.com/assets/v2/images/rs:fit:200:200:false:false/bG9jYWw6Ly8vbG9nb3Mvb3JpZ2luYWxzL2lubm9nZW50LXRlY2hub2xvZ2llcy5qcGc.webp\" // Add the path to your Innogent logo\n          alt=\"Innogent Logo\"\n          style={{ width: \"30px\", height: \"30px\" }} // Adjust the width and height\n        />\n        <h1 style={{ color: \"white\", marginLeft: \"10px\" }}>Innogent</h1>\n      </div>\n      <div className=\"buttons\">\n\n        <DropdownButton id=\"create-dropdown\" title=\"Create\" variant=\"primary\">\n          <Dropdown.Item onClick={() => handleOptionSelect(\"Add Rule\")}>\n            Add Rule\n          </Dropdown.Item>\n          <Dropdown.Item onClick={() => handleOptionSelect(\"Show Rule\")}>\n            Show  Rule\n          </Dropdown.Item>\n        </DropdownButton>\n\n        <button className=\"add-project\" onClick={openModal}>\n          Add Project\n        </button>\n        <button className=\"add-stages\" onClick={handleAddStages}>\n          Add Stage\n        </button>\n        <button className=\"profile-button\">Profile</button>\n      </div>\n\n      {selectedOption === \"Add Rule\" && (\n        <AddRule\n          show={showTaskModal}\n          handleClose={handleCloseTaskModal}\n          formData={formData}\n          handleInputChange={handleInputChange}\n          status={status}\n          stageList={stageList}\n        />\n      )}\n      \n      {showRuleModal && (\n        <RuleModal\n          show={showRuleModal}\n          handleClose={handleCloseRuleModal}\n          projectId={projectById.projectId}  // Pass projectId to RuleModal\n        />\n      )}\n\n      {isModalOpen && (\n        <div className=\"modal\" style={{ display: \"block\" }}>\n          <div className=\"modal-dialog\">\n            <div className=\"modal-content\">\n              <div className=\"modal-header\">\n                <h5\n                  className=\"modal-title\"\n                  style={{ textAlign: \"center\", color: \"black\" }}\n                >\n                  Add Project\n                </h5>\n                <button type=\"button\" className=\"close\" onClick={closeModal}>\n                  <span>&times;</span>\n                </button>\n              </div>\n              <div className=\"modal-body\" style={{ textAlign: \"left\" }}>\n                <div className=\"form-group\">\n                  <label style={{ color: \"black\" }}>\n                    Project Name <span style={{ color: \"red\" }}>*</span>\n                  </label>\n                  <input\n                    type=\"text\"\n                    className=\"form-control\"\n                    value={newProjectName}\n                    placeholder=\"Project Name (Must start with a letter)\"\n                    onChange={(e) => setNewProjectName(e.target.value)}\n                    required\n                  />\n                </div>\n                <div className=\"form-group\">\n                  <label style={{ color: \"black\" }}>Project Description</label>\n                  <textarea\n                    className=\"form-control\"\n                    value={newProjectDescription}\n                    onChange={(e) => setNewProjectDescription(e.target.value)}\n                  ></textarea>\n                </div>\n              </div>\n              <div className=\"modal-footer\">\n                <button\n                  type=\"button\"\n                  className=\"btn btn-secondary\"\n                  onClick={closeModal}\n                >\n                  Close\n                </button>\n                <button\n                  type=\"button\"\n                  className=\"btn btn-primary\"\n                  onClick={handleSaveProject}\n                  disabled={!isProjectNameValid(newProjectName)}\n                >\n                  Save Project\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n      <ToastContainer />\n    </div>\n  );\n};\nexport default Header;\n","C:\\grapplerV2Workflow-aditya-frontend\\src\\slice\\ProjectSlice.js",["104","105","106","107","108","109","110"],[],"C:\\grapplerV2Workflow-aditya-frontend\\src\\components\\Stage\\TaskModal.js",["111","112"],[],"C:\\grapplerV2Workflow-aditya-frontend\\src\\components\\Stage\\Task.js",["113"],[],"C:\\grapplerV2Workflow-aditya-frontend\\src\\Api\\AllApi.js",[],[],"C:\\grapplerV2Workflow-aditya-frontend\\src\\components\\Rule\\RuleModal.js",["114"],[],"C:\\grapplerV2Workflow-aditya-frontend\\src\\components\\Rule\\AddRule.js",["115","116"],[],"C:\\grapplerV2Workflow-aditya-frontend\\src\\Api\\WebSocketService.js",["117","118","119"],[],"C:\\grapplerV2Workflow-aditya-frontend\\src\\Api\\YourReactComponent.js",[],[],{"ruleId":"120","severity":1,"message":"121","line":8,"column":25,"nodeType":"122","messageId":"123","endLine":8,"endColumn":31},{"ruleId":"124","replacedBy":"125"},{"ruleId":"120","severity":1,"message":"126","line":3,"column":25,"nodeType":"122","messageId":"123","endLine":3,"endColumn":31},{"ruleId":"120","severity":1,"message":"127","line":7,"column":10,"nodeType":"122","messageId":"123","endLine":7,"endColumn":19},{"ruleId":"120","severity":1,"message":"128","line":8,"column":8,"nodeType":"122","messageId":"123","endLine":8,"endColumn":26},{"ruleId":"120","severity":1,"message":"129","line":10,"column":8,"nodeType":"122","messageId":"123","endLine":10,"endColumn":21},{"ruleId":"120","severity":1,"message":"130","line":10,"column":3,"nodeType":"122","messageId":"123","endLine":10,"endColumn":20},{"ruleId":"120","severity":1,"message":"131","line":15,"column":10,"nodeType":"122","messageId":"123","endLine":15,"endColumn":25},{"ruleId":"120","severity":1,"message":"132","line":15,"column":27,"nodeType":"122","messageId":"123","endLine":15,"endColumn":36},{"ruleId":"120","severity":1,"message":"133","line":15,"column":38,"nodeType":"122","messageId":"123","endLine":15,"endColumn":47},{"ruleId":"120","severity":1,"message":"134","line":76,"column":9,"nodeType":"122","messageId":"123","endLine":76,"endColumn":18},{"ruleId":"135","severity":1,"message":"136","line":204,"column":3,"nodeType":"137","messageId":"138","endLine":204,"endColumn":22},{"ruleId":"139","severity":1,"message":"140","line":32,"column":6,"nodeType":"141","endLine":32,"endColumn":8,"suggestions":"142"},{"ruleId":"120","severity":1,"message":"143","line":7,"column":26,"nodeType":"122","messageId":"123","endLine":7,"endColumn":31},{"ruleId":"120","severity":1,"message":"144","line":13,"column":10,"nodeType":"122","messageId":"123","endLine":13,"endColumn":27},{"ruleId":"120","severity":1,"message":"145","line":27,"column":9,"nodeType":"122","messageId":"123","endLine":27,"endColumn":27},{"ruleId":"120","severity":1,"message":"146","line":34,"column":9,"nodeType":"122","messageId":"123","endLine":34,"endColumn":28},{"ruleId":"120","severity":1,"message":"147","line":1,"column":23,"nodeType":"122","messageId":"123","endLine":1,"endColumn":30},{"ruleId":"120","severity":1,"message":"148","line":2,"column":10,"nodeType":"122","messageId":"123","endLine":2,"endColumn":13},{"ruleId":"120","severity":1,"message":"149","line":24,"column":15,"nodeType":"122","messageId":"123","endLine":24,"endColumn":20},{"ruleId":"120","severity":1,"message":"150","line":60,"column":18,"nodeType":"122","messageId":"123","endLine":60,"endColumn":29},{"ruleId":"120","severity":1,"message":"151","line":76,"column":15,"nodeType":"122","messageId":"123","endLine":76,"endColumn":22},{"ruleId":"152","severity":1,"message":"153","line":78,"column":87,"nodeType":"154","messageId":"155","endLine":78,"endColumn":89},{"ruleId":"152","severity":1,"message":"153","line":89,"column":87,"nodeType":"154","messageId":"155","endLine":89,"endColumn":89},{"ruleId":"152","severity":1,"message":"153","line":46,"column":45,"nodeType":"154","messageId":"155","endLine":46,"endColumn":47},{"ruleId":"135","severity":1,"message":"136","line":191,"column":3,"nodeType":"137","messageId":"138","endLine":191,"endColumn":22},{"ruleId":"152","severity":1,"message":"153","line":52,"column":45,"nodeType":"154","messageId":"155","endLine":52,"endColumn":47},{"ruleId":"120","severity":1,"message":"156","line":10,"column":11,"nodeType":"122","messageId":"123","endLine":10,"endColumn":20},{"ruleId":"152","severity":1,"message":"153","line":37,"column":62,"nodeType":"154","messageId":"155","endLine":37,"endColumn":64},{"ruleId":"152","severity":1,"message":"153","line":49,"column":61,"nodeType":"154","messageId":"155","endLine":49,"endColumn":63},{"ruleId":"120","severity":1,"message":"157","line":5,"column":10,"nodeType":"122","messageId":"123","endLine":5,"endColumn":26},{"ruleId":"139","severity":1,"message":"158","line":27,"column":6,"nodeType":"141","endLine":27,"endColumn":8,"suggestions":"159"},{"ruleId":"120","severity":1,"message":"160","line":29,"column":9,"nodeType":"122","messageId":"123","endLine":29,"endColumn":20},"no-unused-vars","'Routes' is defined but never used.","Identifier","unusedVar","no-new-object",["161"],"'Outlet' is defined but never used.","'useEffect' is defined but never used.","'YourReactComponent' is defined but never used.","'ChatComponent' is defined but never used.","'updateSliceTicket' is defined but never used.","'DragDropContext' is defined but never used.","'Droppable' is defined but never used.","'Draggable' is defined but never used.","'onDragEnd' is assigned a value but never used.","no-unreachable","Unreachable code.","ExpressionStatement","unreachableCode","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["162"],"'toast' is defined but never used.","'isDropdownVisible' is assigned a value but never used.","'handleAddTaskClick' is assigned a value but never used.","'handleShowRuleModal' is assigned a value but never used.","'current' is defined but never used.","'act' is defined but never used.","'index' is assigned a value but never used.","'movedTicket' is assigned a value but never used.","'stageId' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'stageList' is assigned a value but never used.","'addTicketToStage' is defined but never used.","React Hook useEffect has missing dependencies: 'connect' and 'stompClient'. Either include them or remove the dependency array.",["163"],"'sendMessage' is assigned a value but never used.","no-object-constructor",{"desc":"164","fix":"165"},{"desc":"166","fix":"167"},"Update the dependencies array to be: [dispatch]",{"range":"168","text":"169"},"Update the dependencies array to be: [connect, stompClient]",{"range":"170","text":"171"},[959,961],"[dispatch]",[901,903],"[connect, stompClient]"]